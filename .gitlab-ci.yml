# Variabeln definieren
variables:
  IMAGE_FILE: 'easynotes.tar'
  REGISTRY_PATH: '$CI_REGISTRY/m210-easy-notes/easy-notes' # Hier dein individueller Pfad eingeben von deinem Projekt.
  IMAGE_NAME: 'easynotes'
  IMAGE_VERSION: '1.0.0'

# Um Docker Befehle verwenden zu können müssen wir die GitLab-Pipeline-Umgebung konfigurieren.
# Wir verwenden Docker als Pipeline und verwenden zusätzlich docker-in-docker (dind) als Service um Docker-Befehle auführen zu können.
image: docker:latest
services:
  - docker:dind

# Stages definieren
stages:
  - build
  - test
  - deploy
  - updatecd

# Build Stage
build:
  stage: build
  script:
    # Achte darauf, dass wir das Image gleich mit dem Gitlab-Registry-Name-Schema nennen: registry.gitlab.com/coaching-m210/hellom210-ci/hellom210:latest
    # $CI_REGISTRY ist eine Systemvariabel die GitLab zu Verfügung stellt.
    - docker build -t $REGISTRY_PATH/$IMAGE_NAME:latest -t $REGISTRY_PATH/$IMAGE_NAME:$IMAGE_VERSION .

    # Wir speichern das Docker-Image in eine Datei um dieses in anderen Stages wiederverwenden zu können.
    # Dies wegen der Performance, wir können das Image nicht in jeder Stage neu erstellen.
    - docker save -o $IMAGE_FILE $REGISTRY_PATH/$IMAGE_NAME:latest $REGISTRY_PATH/$IMAGE_NAME:$IMAGE_VERSION

  # Mit Artifakten können wir z.B. Dateien zwischen den Build-Stages persistent machen.
  artifacts:
    paths:
      - $IMAGE_FILE

# Test Stage
test:
  stage: test
  variables:
    MYSQL_DATABASE: 'easynotes'
    MYSQL_USER: 'easynotes'
    MYSQL_PASSWORD: 'easynotes'
  script:
    # Dockerfile laden.
    - docker load -i $IMAGE_FILE
    # Netzwerk erstellen
    - docker network create net-easynotes
    # MariaDB Image pullen und Datenbank Container für den Test starten.
    - docker pull mariadb:latest
    - docker run --name easynotes-db --network net-easynotes -e MYSQL_RANDOM_ROOT_PASSWORD=yes -e MYSQL_DATABASE=$MYSQL_DATABASE -e MYSQL_USER=$MYSQL_USER -e MYSQL_PASSWORD=$MYSQL_PASSWORD -v $(pwd)/dbseed.sql:/docker-entrypoint-initdb.d/seed.sql -d mariadb:latest
    - sleep 30
    # EasyNotes Container starten
    - docker run --name easynotes --network net-easynotes -e DB_HOST=easynotes-db -e DB_NAME=$MYSQL_DATABASE -e DB_USER=$MYSQL_USER -e DB_PASS=$MYSQL_PASSWORD -p 8080:8080 -d $REGISTRY_PATH/$IMAGE_NAME:latest
    # Test Container mit curl starten um EasyNotes zu testen.
    - docker run -d --name easynotes-test --network net-easynotes alpine:latest /bin/sh -c "sleep infinity"
    - docker exec easynotes-test /bin/sh -c "apk add --no-cache curl"
    - docker exec easynotes-test curl http://easynotes:8080 -f
    # Aufräumen
    - docker stop easynotes easynotes-db easynotes-test
    - docker rm easynotes easynotes-db easynotes-test
    - docker network rm net-easynotes

# Deploy Stage
deploy:
  stage: deploy
  script:
    - docker load -i $IMAGE_FILE
    # In Registry einloggen
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    # Image in Registry speichern mit Versions-Tag
    - docker push $REGISTRY_PATH/$IMAGE_NAME:$IMAGE_VERSION
    # Image in Registry speichern mit latest-Tag
    - docker push $REGISTRY_PATH/$IMAGE_NAME:latest
    - docker logout

# Update CD Stage.
updatecd:
  stage: updatecd
  # Wir verwenden einen Alpine Container und installieren dann git und sed.
  image: alpine:latest
  before_script:
    - apk update && apk add git sed
    - git config --global user.email "coaching@tschan-its.ch"
    - git config --global user.name "Andi Tschan"
  variables:
    CD_REPO: 'https://oauth2:${M210_CD_ACCESS_TOKEN}@gitlab.com/m210-easy-notes/easy-notes-cd.git'
    CD_DEPLOY_FILE: 'easynotes-deployment.yml'
  script:
    - git clone $CD_REPO m210-cd-temp
    - cd m210-cd-temp
    # Nach der Position der Versionsnummer suchen und die akutelle Version aktualisieren
    - 'sed -i ''s|image: registry.gitlab.com/m210-easy-notes/easy-notes/easynotes:.*|image: registry.gitlab.com/m210-easy-notes/easy-notes/easynotes:''"$IMAGE_VERSION"''|'' $CD_DEPLOY_FILE'
    - git commit -am "Aktualisiere Versionsnummer auf $IMAGE_VERSION"
    - git push origin main
